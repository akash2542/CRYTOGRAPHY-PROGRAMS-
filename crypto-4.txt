#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// Function to perform polyalphabetic substitution encryption
void encrypt(char message[], char keyword[]) {
    int keyword_length = strlen(keyword);
    int message_length = strlen(message);
    char ciphertext[message_length];

    for (int i = 0, j = 0; i < message_length; ++i) {
        char key_char = keyword[j % keyword_length];
        int shift = isupper(key_char) ? (key_char - 'A') : (key_char - 'a');

        if (isupper(message[i])) {
            ciphertext[i] = 'A' + (message[i] - 'A' + shift) % 26;
        } else if (islower(message[i])) {
            ciphertext[i] = 'a' + (message[i] - 'a' + shift) % 26;
        } else {
            ciphertext[i] = message[i];  // Non-alphabetic characters remain unchanged
            continue;
        }

        j++;
    }

    ciphertext[message_length] = '\0';
    strcpy(message, ciphertext);
}

// Function to perform polyalphabetic substitution decryption
void decrypt(char message[], char keyword[]) {
    int keyword_length = strlen(keyword);
    int message_length = strlen(message);
    char plaintext[message_length];

    for (int i = 0, j = 0; i < message_length; ++i) {
        char key_char = keyword[j % keyword_length];
        int shift = isupper(key_char) ? (key_char - 'A') : (key_char - 'a');

        if (isupper(message[i])) {
            plaintext[i] = 'A' + (message[i] - 'A' - shift + 26) % 26;
        } else if (islower(message[i])) {
            plaintext[i] = 'a' + (message[i] - 'a' - shift + 26) % 26;
        } else {
            plaintext[i] = message[i];  // Non-alphabetic characters remain unchanged
            continue;
        }

        j++;
    }

    plaintext[message_length] = '\0';
    strcpy(message, plaintext);
}

int main() {
    char message[100];
    char keyword[100];
    int choice;

    printf("Enter message to encrypt/decrypt: ");
    fgets(message, sizeof(message), stdin);

    printf("Enter encryption/decryption keyword: ");
    fgets(keyword, sizeof(keyword), stdin);

    // Remove newline characters if present
    message[strcspn(message, "\n")] = '\0';
    keyword[strcspn(keyword, "\n")] = '\0';

    printf("1. Encrypt\n2. Decrypt\nEnter your choice (1 or 2): ");
    scanf("%d", &choice);
    getchar();  // Consume newline left by scanf

    switch (choice) {
        case 1:
            encrypt(message, keyword);
            printf("Encrypted message: %s\n", message);
            break;
        case 2:
            decrypt(message, keyword);
            printf("Decrypted message: %s\n", message);
            break;
        default:
            printf("Invalid choice.\n");
    }

    return 0;
}
output:
Enter message to encrypt/decrypt: Hello, World!
Enter encryption/decryption keyword: SECRET
1. Encrypt
2. Decrypt
Enter your choice (1 or 2): 1
Encrypted message: Tkhmd, Vvwlv!